c
users
c
user_params
c
n
self
n
nn
params
c
object
obj.object.created_at
obj.object.id
obj.object.name
obj.object
obj.methods
self
obj.created_at
obj
params
c
objc
obj.post
obj
obj.id
obj
obj.created_at
created_at
obj
obj.created_at
obj
c
@post.class
@post
c
@post
c
@like
c
post_params
c
post_params
c
@post = @current_user.posts.create(post_params)
c
params[:description]
params
c
@current_user
c
@decoded = jwt_decode(header)
header = header.split(' ').last
header = request.headers['Authorization']
c
@current_user
n
@decoded
n
header
n
header
n
@current_user = User.find(@decoded[:user_id])
@decoded = jwt_decode(header)
header = header.split(' ').last
header
header = request.headers['Authorization']
c
@user.save
@user = User.new(user_params)
User.new
user_params
c
post.save
post = Post.new(post_params.merge(user_id: @current_user.id))
c
post_params.merge(user_id: @current_user.id)
c
@current_user
c
post.save!
post.save
post = Post.new(post_params)
post_params
c
post_params
c
jwt_decode(header)
n
c
@current_user
n
jwt_decode(header)
header
n
header = header.split(' ').last if header
n
header = request.headers['Authorization']
c
User.new(user_params)
user_params
User.new
USer.new
User.new(user_params)
